{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/screen/DetailPost.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { getPostById } from \"../../firebase/collection/readData\";\nexport default function DetailPost(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setReady = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      post = _useState4[0],\n      setPost = _useState4[1];\n\n  var postId = route.params.postId;\n  useEffect(function () {\n    console.log(\"DP\", postId);\n    setReady(false);\n\n    var handlePost = function handlePost() {\n      var currentPost;\n      return _regeneratorRuntime.async(function handlePost$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getPostById(postId));\n\n            case 2:\n              currentPost = _context.sent;\n              console.log(currentPost);\n              setTimeout(function () {\n                setPost(currentPost);\n                setReady(true);\n              }, 5000);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    handlePost();\n    console.log(post);\n  }, [SetPost]);\n  return isReady === false ? null : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, post.postTitle));\n}","map":{"version":3,"sources":["/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/screen/DetailPost.js"],"names":["React","useEffect","useState","getPostById","DetailPost","route","navigation","isReady","setReady","post","setPost","postId","params","console","log","handlePost","currentPost","setTimeout","SetPost","postTitle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,WAAT;AACA,eAAe,SAASC,UAAT,OAA2C;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBAC7BJ,QAAQ,CAAC,KAAD,CADqB;AAAA;AAAA,MAClDK,OADkD;AAAA,MACzCC,QADyC;;AAAA,mBAGjCN,QAAQ,EAHyB;AAAA;AAAA,MAGlDO,IAHkD;AAAA,MAG5CC,OAH4C;;AAAA,MAKjDC,MALiD,GAKtCN,KAAK,CAACO,MALgC,CAKjDD,MALiD;AAOzDV,EAAAA,SAAS,CAAC,YAAM;AACfY,IAAAA,OAAO,CAACC,GAAR,OAAkBH,MAAlB;AACAH,IAAAA,QAAQ,CAAC,KAAD,CAAR;;AACA,QAAMO,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQZ,WAAW,CAACQ,MAAD,CADnB;;AAAA;AACZK,cAAAA,WADY;AAElBH,cAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACAC,cAAAA,UAAU,CAAC,YAAM;AAChBP,gBAAAA,OAAO,CAACM,WAAD,CAAP;AACAR,gBAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,eAHS,EAGP,IAHO,CAAV;;AAHkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAQAO,IAAAA,UAAU;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,GAbQ,EAaN,CAACS,OAAD,CAbM,CAAT;AAeA,SAAOX,OAAO,KAAK,KAAZ,GAAoB,IAApB,GACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,IAAI,CAACU,SAAZ,CADD,CADD;AAKA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, Text, Alert } from \"react-native\";\nimport { getPostById } from \"../../firebase/collection/readData\";\nexport default function DetailPost({ route, navigation }) {\n\tconst [isReady, setReady] = useState(false);\n\n\tconst [post, setPost] = useState();\n\n\tconst { postId } = route.params;\n\n\tuseEffect(() => {\n\t\tconsole.log(`DP`, postId);\n\t\tsetReady(false);\n\t\tconst handlePost = async () => {\n\t\t\tconst currentPost = await getPostById(postId);\n\t\t\tconsole.log(currentPost);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetPost(currentPost);\n\t\t\t\tsetReady(true);\n\t\t\t}, 5000);\n\t\t};\n\t\thandlePost();\n\t\tconsole.log(post);\n\t}, [SetPost]);\n\n\treturn isReady === false ? null : (\n\t\t<View>\n\t\t\t<Text>{post.postTitle}</Text>\n\t\t</View>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}