{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/screen/AllPost.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getAllPost } from \"../../firebase/collection/readData\";\nexport default function AllPost(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setReady = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postList = _useState4[0],\n      setPostList = _useState4[1];\n\n  useEffect(function () {\n    setReady(false);\n\n    var handlePost = function handlePost() {\n      var b;\n      return _regeneratorRuntime.async(function handlePost$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getAllPost());\n\n            case 2:\n              b = _context.sent;\n              setPostList(b);\n              setReady(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    handlePost();\n  }, [setPostList]);\n\n  var handleDetailPost = function handleDetailPost(id) {\n    navigation.navigate(\"DetailPost\", {\n      postId: id\n    });\n  };\n\n  var postScreen = postList.map(function (post) {\n    return React.createElement(TouchableOpacity, {\n      key: post.postId,\n      style: styles.imageContainer,\n      onPress: function onPress() {\n        handleDetailPost(post.postId);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 3\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }\n    }, React.createElement(Image, {\n      style: styles.tinyLogo,\n      source: {\n        uri: \"\" + post.images[0]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    })), React.createElement(View, {\n      style: styles.textbox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: styles.font,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, \"Title: \", post.postTitle), React.createElement(Text, {\n      style: styles.font,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, \"Date: \", new Date(post.createdTime.toDate()).toDateString())));\n  });\n  return isReady === false ? null : React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, postScreen);\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 15\n  },\n  imageContainer: {\n    padding: 5,\n    marginTop: 25,\n    borderColor: \"#000\",\n    borderWidth: 2,\n    flexDirection: \"row\",\n    width: \"100%\"\n  },\n  font: {\n    fontSize: 22\n  },\n  textbox: {\n    marginLeft: 3\n  },\n  tinyLogo: {\n    width: 80,\n    height: 80\n  }\n});","map":{"version":3,"sources":["/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/screen/AllPost.js"],"names":["React","useEffect","useState","getAllPost","AllPost","navigation","isReady","setReady","postList","setPostList","handlePost","b","handleDetailPost","id","navigate","postId","postScreen","map","post","styles","imageContainer","tinyLogo","uri","images","textbox","font","postTitle","Date","createdTime","toDate","toDateString","container","StyleSheet","create","padding","marginTop","borderColor","borderWidth","flexDirection","width","fontSize","marginLeft","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n\tView,\n\tText,\n\tImage,\n\tStyleSheet,\n\tScrollView,\n\tTouchableOpacity,\n} from \"react-native\";\nimport { getAllPost } from \"../../firebase/collection/readData\";\nexport default function AllPost({ navigation }) {\n\tconst [isReady, setReady] = useState(false);\n\n\tconst [postList, setPostList] = useState([]);\n\n\tuseEffect(() => {\n\t\tsetReady(false);\n\t\tconst handlePost = async () => {\n\t\t\tconst b = await getAllPost();\n\t\t\tsetPostList(b);\n\t\t\tsetReady(true);\n\t\t};\n\t\thandlePost();\n\t}, [setPostList]);\n\n\tconst handleDetailPost = (id) => {\n\t\tnavigation.navigate(\"DetailPost\", { postId: id });\n\t};\n\n\tconst postScreen = postList.map((post) => (\n\t\t<TouchableOpacity\n\t\t\tkey={post.postId}\n\t\t\tstyle={styles.imageContainer}\n\t\t\tonPress={() => {\n\t\t\t\thandleDetailPost(post.postId);\n\t\t\t}}\n\t\t>\n\t\t\t<View>\n\t\t\t\t<Image\n\t\t\t\t\tstyle={styles.tinyLogo}\n\t\t\t\t\tsource={{\n\t\t\t\t\t\turi: `${post.images[0]}`,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t\t<View style={styles.textbox}>\n\t\t\t\t<Text style={styles.font}>Title: {post.postTitle}</Text>\n\t\t\t\t<Text style={styles.font}>\n\t\t\t\t\tDate: {new Date(post.createdTime.toDate()).toDateString()}\n\t\t\t\t</Text>\n\t\t\t</View>\n\t\t</TouchableOpacity>\n\t));\n\n\treturn isReady === false ? null : (\n\t\t<ScrollView style={styles.container}>{postScreen}</ScrollView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tpadding: 15,\n\t},\n\timageContainer: {\n\t\tpadding: 5,\n\t\tmarginTop: 25,\n\t\tborderColor: \"#000\",\n\t\tborderWidth: 2,\n\t\tflexDirection: \"row\",\n\t\twidth: \"100%\",\n\t},\n\tfont: {\n\t\tfontSize: 22,\n\t},\n\ttextbox: {\n\t\tmarginLeft: 3,\n\t},\n\ttinyLogo: {\n\t\twidth: 80,\n\t\theight: 80,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}