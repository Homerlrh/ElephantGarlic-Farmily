{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { firebase, db, auth } from \"../firebase\";\nvar Users = db.collection(\"users\");\nvar Posts = db.collection(\"posts\");\n\nvar login = function login(email, password) {\n  return firebase.auth().signInWithEmailAndPassword(email, password).then(function _callee(response) {\n    var uid, user;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uid = response.user.uid;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getUseWithUID(uid));\n\n          case 3:\n            user = _context.sent;\n            return _context.abrupt(\"return\", user);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }).catch(function (error) {\n    throw error.message;\n  });\n};\n\nvar logout = function logout() {\n  return auth.signOut().then(function () {\n    return true;\n  }).catch(function (error) {\n    throw error.message;\n  });\n};\n\nfunction getUseWithUID(uid) {\n  return _regeneratorRuntime.async(function getUseWithUID$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", Users.where(\"id\", \"==\", uid).get().then(function (data) {\n            var user;\n            data.forEach(function (doc) {\n              user = _objectSpread({}, doc.data());\n            });\n\n            if (!user) {\n              throw \"No user\";\n            }\n\n            return user;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUserWithEmail(email) {\n  return _regeneratorRuntime.async(function getUserWithEmail$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", Users.where(\"email\", \"==\", email).get().then(function (data) {\n            var user;\n            data.forEach(function (doc) {\n              user = _objectSpread({}, doc.data());\n            });\n\n            if (!user) {\n              throw \"No user\";\n            }\n\n            return user;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUserWithUsername(username) {\n  return _regeneratorRuntime.async(function getUserWithUsername$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", Users.where(\"userName\", \"==\", username).get().then(function (data) {\n            var user;\n            data.forEach(function (doc) {\n              user = _objectSpread({}, doc.data());\n            });\n\n            if (!user) {\n              throw \"No user\";\n            }\n\n            return user;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getCurrentUser() {\n  var userId, user;\n  return _regeneratorRuntime.async(function getCurrentUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          userId = auth.currentUser.uid;\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(getUseWithUID(userId));\n\n        case 4:\n          user = _context5.sent;\n          return _context5.abrupt(\"return\", user);\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          throw _context5.t0.message;\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n}\n\nfunction getAllPost() {\n  var snapshot, array;\n  return _regeneratorRuntime.async(function getAllPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(db.collection(\"posts\").orderBy(\"createdTime\").get());\n\n        case 2:\n          snapshot = _context7.sent;\n          array = [];\n          snapshot.forEach(function _callee2(x) {\n            return _regeneratorRuntime.async(function _callee2$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    array = [].concat(_toConsumableArray(array), [x.data()]);\n\n                  case 1:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          });\n          return _context7.abrupt(\"return\", array.reverse());\n\n        case 6:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getPostById(id) {\n  return _regeneratorRuntime.async(function getPostById$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          setTimeout(function _callee4() {\n            var snapshot, array;\n            return _regeneratorRuntime.async(function _callee4$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return _regeneratorRuntime.awrap(Posts.where(\"postId\", \"==\", id).get());\n\n                  case 2:\n                    snapshot = _context9.sent;\n                    array = [];\n                    snapshot.forEach(function _callee3(x) {\n                      return _regeneratorRuntime.async(function _callee3$(_context8) {\n                        while (1) {\n                          switch (_context8.prev = _context8.next) {\n                            case 0:\n                              array = [].concat(_toConsumableArray(array), [x.data()]);\n\n                            case 1:\n                            case \"end\":\n                              return _context8.stop();\n                          }\n                        }\n                      }, null, null, null, Promise);\n                    });\n                    return _context9.abrupt(\"return\", array[0]);\n\n                  case 6:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }, 2000);\n\n        case 1:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport { getUseWithUID, getUserWithEmail, getUserWithUsername, login, logout, getCurrentUser, getAllPost, getPostById };","map":{"version":3,"sources":["/Users/homerli/Desktop/ElephantGarlic-Farmily/firebase/collection/readData.js"],"names":["firebase","db","auth","Users","collection","Posts","login","email","password","signInWithEmailAndPassword","then","response","uid","user","getUseWithUID","catch","error","message","logout","signOut","where","get","data","forEach","doc","getUserWithEmail","getUserWithUsername","username","getCurrentUser","userId","currentUser","getAllPost","orderBy","snapshot","array","x","reverse","getPostById","id","setTimeout"],"mappings":"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","sourcesContent":["import { firebase, db, auth } from \"../firebase\";\nconst Users = db.collection(\"users\");\nconst Posts = db.collection(\"posts\");\n\nconst login = (email, password) => {\n\treturn firebase\n\t\t.auth()\n\t\t.signInWithEmailAndPassword(email, password)\n\t\t.then(async (response) => {\n\t\t\tconst uid = response.user.uid;\n\t\t\tconst user = await getUseWithUID(uid);\n\t\t\treturn user;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tthrow error.message;\n\t\t});\n};\n\nconst logout = () => {\n\treturn auth\n\t\t.signOut()\n\t\t.then(function () {\n\t\t\treturn true;\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tthrow error.message;\n\t\t});\n};\n\nasync function getUseWithUID(uid) {\n\treturn Users.where(\"id\", \"==\", uid)\n\t\t.get()\n\t\t.then((data) => {\n\t\t\tlet user;\n\t\t\tdata.forEach((doc) => {\n\t\t\t\tuser = { ...doc.data() };\n\t\t\t});\n\t\t\tif (!user) {\n\t\t\t\tthrow \"No user\";\n\t\t\t}\n\t\t\treturn user;\n\t\t});\n}\n\nasync function getUserWithEmail(email) {\n\treturn Users.where(\"email\", \"==\", email)\n\t\t.get()\n\t\t.then((data) => {\n\t\t\tlet user;\n\t\t\tdata.forEach((doc) => {\n\t\t\t\tuser = { ...doc.data() };\n\t\t\t});\n\t\t\tif (!user) {\n\t\t\t\tthrow \"No user\";\n\t\t\t}\n\t\t\treturn user;\n\t\t});\n}\n\nasync function getUserWithUsername(username) {\n\treturn Users.where(\"userName\", \"==\", username)\n\t\t.get()\n\t\t.then((data) => {\n\t\t\tlet user;\n\t\t\tdata.forEach((doc) => {\n\t\t\t\tuser = { ...doc.data() };\n\t\t\t});\n\t\t\tif (!user) {\n\t\t\t\tthrow \"No user\";\n\t\t\t}\n\t\t\treturn user;\n\t\t});\n}\n\nasync function getCurrentUser() {\n\ttry {\n\t\tconst userId = auth.currentUser.uid;\n\t\tconst user = await getUseWithUID(userId);\n\t\treturn user;\n\t} catch (err) {\n\t\tthrow err.message;\n\t}\n}\n\nasync function getAllPost() {\n\tconst snapshot = await db.collection(\"posts\").orderBy(\"createdTime\").get();\n\tlet array = [];\n\tsnapshot.forEach(async (x) => {\n\t\tarray = [...array, x.data()];\n\t});\n\treturn array.reverse();\n}\n\nasync function getPostById(id) {\n\tsetTimeout(async () => {\n\t\tconst snapshot = await Posts.where(\"postId\", \"==\", id).get();\n\t\tlet array = [];\n\t\tsnapshot.forEach(async (x) => {\n\t\t\tarray = [...array, x.data()];\n\t\t});\n\t\treturn array[0];\n\t}, 2000);\n}\n\nexport {\n\tgetUseWithUID,\n\tgetUserWithEmail,\n\tgetUserWithUsername,\n\tlogin,\n\tlogout,\n\tgetCurrentUser,\n\tgetAllPost,\n\tgetPostById,\n};\n"]},"metadata":{},"sourceType":"module"}