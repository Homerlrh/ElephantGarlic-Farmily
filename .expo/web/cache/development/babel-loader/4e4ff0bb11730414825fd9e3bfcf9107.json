{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/CreatePost.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { navigation } from \"@react-navigation/native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport ImageInputList from \"./createPost/ImageInputList\";\nimport styles from \"./styles\";\nimport { getCurrentUser } from \"../firebase/collection/readData\";\nimport { createPost, uploadFiles } from \"../firebase/collection/writeData\";\nexport default function CreatePost(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postTitle = _useState4[0],\n      setpostTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      postDescription = _useState6[0],\n      setPostDescription = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUris = _useState8[0],\n      setImageUris = _useState8[1];\n\n  useEffect(function () {\n    function detectUser() {\n      var user;\n      return _regeneratorRuntime.async(function detectUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getCurrentUser());\n\n            case 3:\n              user = _context.sent;\n              setCurrentUser(user);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              Alert.alert(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }\n\n    detectUser();\n  }, [setCurrentUser]);\n  useEffect(function () {\n    var requestPermission = function requestPermission() {\n      var _await$ImagePicker$re, granted;\n\n      return _regeneratorRuntime.async(function requestPermission$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 2:\n              _await$ImagePicker$re = _context2.sent;\n              granted = _await$ImagePicker$re.granted;\n\n              if (!granted) {\n                Alert.alert(\"You need to enable permisssion to use this feature\");\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    requestPermission();\n  }, []);\n\n  var handlecreatePost = function handlecreatePost() {\n    var imageList, data, id;\n    return _regeneratorRuntime.async(function handlecreatePost$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(uploadFiles(imageUris));\n\n          case 3:\n            imageList = _context3.sent;\n            data = {\n              createdBy: {\n                name: currentUser.userName,\n                id: currentUser.id\n              },\n              postTitle: postTitle,\n              postDescription: postDescription,\n              postType: \"disscussion\",\n              images: imageList\n            };\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(createPost(data));\n\n          case 7:\n            id = _context3.sent;\n            navigation.navigate(\"DetailPost\", {\n              postId: id\n            });\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            Alert.alert(_context3.t0);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var handleAdd = function handleAdd(uri) {\n    setImageUris([].concat(_toConsumableArray(imageUris), [uri]));\n  };\n\n  var handleRemove = function handleRemove(uri) {\n    setImageUris(imageUris.filter(function (imageUri) {\n      return imageUri !== uri;\n    }));\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputSpace,\n    placeholder: \"Title\",\n    onChangeText: function onChangeText(text) {\n      return setpostTitle(text);\n    },\n    value: postTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    multiline: true,\n    style: styles.inputSpace,\n    placeholder: \"Description\",\n    onChangeText: function onChangeText(text) {\n      return setPostDescription(text);\n    },\n    value: postDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }), React.createElement(ImageInputList, {\n    imageUris: imageUris,\n    onAddImage: handleAdd,\n    onRemoveImage: handleRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    title: \"Upload Photo\",\n    onPress: handlecreatePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/CreatePost.js"],"names":["React","useState","useEffect","navigation","ImagePicker","ImageInputList","styles","getCurrentUser","createPost","uploadFiles","CreatePost","currentUser","setCurrentUser","postTitle","setpostTitle","postDescription","setPostDescription","imageUris","setImageUris","detectUser","user","Alert","alert","requestPermission","requestCameraRollPermissionsAsync","granted","handlecreatePost","imageList","data","createdBy","name","userName","id","postType","images","navigate","postId","handleAdd","uri","handleRemove","filter","imageUri","container","Platform","OS","inputSpace","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tImage,\n\tText,\n\tTextInput,\n\tAlert,\n\tButton,\n\tKeyboardAvoidingView,\n} from \"react-native\";\n\nimport { navigation } from \"@react-navigation/native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport ImageInputList from \"./createPost/ImageInputList\";\nimport styles from \"./styles\";\n\nimport { getCurrentUser } from \"../firebase/collection/readData\";\nimport { createPost, uploadFiles } from \"../firebase/collection/writeData\";\n\nexport default function CreatePost({ navigation }) {\n\tconst [currentUser, setCurrentUser] = useState({});\n\n\t//post info\n\tconst [postTitle, setpostTitle] = useState(\"\");\n\tconst [postDescription, setPostDescription] = useState(\"\");\n\tconst [imageUris, setImageUris] = useState([]);\n\n\tuseEffect(() => {\n\t\tasync function detectUser() {\n\t\t\ttry {\n\t\t\t\tconst user = await getCurrentUser();\n\t\t\t\tsetCurrentUser(user);\n\t\t\t} catch (err) {\n\t\t\t\tAlert.alert(err);\n\t\t\t}\n\t\t}\n\t\tdetectUser();\n\t}, [setCurrentUser]);\n\n\tuseEffect(() => {\n\t\tconst requestPermission = async () => {\n\t\t\tconst { granted } = await ImagePicker.requestCameraRollPermissionsAsync();\n\t\t\tif (!granted) {\n\t\t\t\tAlert.alert(\"You need to enable permisssion to use this feature\");\n\t\t\t}\n\t\t};\n\t\trequestPermission();\n\t}, []);\n\n\tconst handlecreatePost = async () => {\n\t\ttry {\n\t\t\tconst imageList = await uploadFiles(imageUris);\n\t\t\tconst data = {\n\t\t\t\tcreatedBy: { name: currentUser.userName, id: currentUser.id },\n\t\t\t\tpostTitle,\n\t\t\t\tpostDescription,\n\t\t\t\tpostType: \"disscussion\",\n\t\t\t\timages: imageList,\n\t\t\t};\n\t\t\tconst id = await createPost(data);\n\t\t\t//Alert.alert(id);\n\t\t\tnavigation.navigate(\"DetailPost\", { postId: id });\n\t\t} catch (err) {\n\t\t\tAlert.alert(err);\n\t\t}\n\t};\n\n\tconst handleAdd = (uri) => {\n\t\tsetImageUris([...imageUris, uri]);\n\t};\n\n\tconst handleRemove = (uri) => {\n\t\tsetImageUris(imageUris.filter((imageUri) => imageUri !== uri));\n\t};\n\n\treturn (\n\t\t<KeyboardAvoidingView\n\t\t\tstyle={styles.container}\n\t\t\tbehavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n\t\t>\n\t\t\t<TextInput\n\t\t\t\tstyle={styles.inputSpace}\n\t\t\t\tplaceholder=\"Title\"\n\t\t\t\tonChangeText={(text) => setpostTitle(text)}\n\t\t\t\tvalue={postTitle}\n\t\t\t/>\n\t\t\t<TextInput\n\t\t\t\tmultiline\n\t\t\t\tstyle={styles.inputSpace}\n\t\t\t\tplaceholder=\"Description\"\n\t\t\t\tonChangeText={(text) => setPostDescription(text)}\n\t\t\t\tvalue={postDescription}\n\t\t\t/>\n\t\t\t<ImageInputList\n\t\t\t\timageUris={imageUris}\n\t\t\t\tonAddImage={handleAdd}\n\t\t\t\tonRemoveImage={handleRemove}\n\t\t\t/>\n\n\t\t\t<Button title=\"Upload Photo\" onPress={handlecreatePost} />\n\t\t</KeyboardAvoidingView>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}