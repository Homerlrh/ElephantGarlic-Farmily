{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/Register.js\";\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { registerNewUser } from \"../firebase/collection/writeData\";\nimport styles from \"./styles\";\nexport default function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userName = _useState6[0],\n      setUserName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      confirmPassword = _useState12[0],\n      setConfirmPassword = _useState12[1];\n\n  var handleLogin = function handleLogin() {\n    navigation.navigate(\"Login\");\n  };\n\n  var signUP = function signUP() {\n    var data;\n    return _regeneratorRuntime.async(function signUP$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              firstName: firstName,\n              lastName: lastName,\n              userName: userName,\n              email: email\n            };\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(registerNewUser(email, password, confirmPassword, data));\n\n          case 4:\n            navigation.navigate(\"Home\");\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            Alert.alert(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 7]], Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/Farmily.png\"),\n    style: styles.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputSpace,\n    placeholder: \"ex: John\",\n    onChangeText: function onChangeText(text) {\n      return setFirstName(text);\n    },\n    value: firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputSpace,\n    placeholder: \"ex: Doe\",\n    onChangeText: function onChangeText(text) {\n      return setLastName(text);\n    },\n    value: lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputSpace,\n    placeholder: \"Username\",\n    onChangeText: function onChangeText(text) {\n      return setUserName(text);\n    },\n    value: userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputSpace,\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputSpace,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputSpace,\n    placeholder: \"Confirm Password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }), React.createElement(Button, {\n    title: \"Signup\",\n    onPress: function onPress() {\n      signUP();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }\n  }, \"Have an account?\", React.createElement(Text, {\n    onPress: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"Log in\")));\n}","map":{"version":3,"sources":["/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/Register.js"],"names":["React","useState","registerNewUser","styles","Register","navigation","firstName","setFirstName","lastName","setLastName","userName","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleLogin","navigate","signUP","data","Alert","alert","container","Platform","OS","require","img","inputSpace","text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n\tImage,\n\tText,\n\tTextInput,\n\tAlert,\n\tButton,\n\tKeyboardAvoidingView,\n} from \"react-native\";\nimport { registerNewUser } from \"../firebase/collection/writeData\";\nimport styles from \"./styles\";\n\nexport default function Register({ navigation }) {\n\tconst [firstName, setFirstName] = useState(\"\");\n\tconst [lastName, setLastName] = useState(\"\");\n\tconst [userName, setUserName] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\n\n\tconst handleLogin = () => {\n\t\tnavigation.navigate(\"Login\");\n\t};\n\n\tconst signUP = async () => {\n\t\tconst data = {\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\tuserName,\n\t\t\temail,\n\t\t};\n\n\t\ttry {\n\t\t\tawait registerNewUser(email, password, confirmPassword, data);\n\t\t\tnavigation.navigate(\"Home\");\n\t\t} catch (err) {\n\t\t\tAlert.alert(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<KeyboardAvoidingView\n\t\t\tstyle={styles.container}\n\t\t\tbehavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n\t\t>\n\t\t\t<Image source={require(\"../assets/Farmily.png\")} style={styles.img} />\n\t\t\t<TextInput\n\t\t\t\tstyle={styles.inputSpace}\n\t\t\t\tplaceholder=\"ex: John\"\n\t\t\t\tonChangeText={(text) => setFirstName(text)}\n\t\t\t\tvalue={firstName}\n\t\t\t/>\n\n\t\t\t<TextInput\n\t\t\t\tstyle={styles.inputSpace}\n\t\t\t\tplaceholder=\"ex: Doe\"\n\t\t\t\tonChangeText={(text) => setLastName(text)}\n\t\t\t\tvalue={lastName}\n\t\t\t/>\n\n\t\t\t<TextInput\n\t\t\t\tstyle={styles.inputSpace}\n\t\t\t\tplaceholder=\"Username\"\n\t\t\t\tonChangeText={(text) => setUserName(text)}\n\t\t\t\tvalue={userName}\n\t\t\t/>\n\n\t\t\t<TextInput\n\t\t\t\tstyle={styles.inputSpace}\n\t\t\t\tplaceholder=\"Email\"\n\t\t\t\tonChangeText={(text) => setEmail(text)}\n\t\t\t\tvalue={email}\n\t\t\t/>\n\n\t\t\t<TextInput\n\t\t\t\tstyle={styles.inputSpace}\n\t\t\t\tplaceholder=\"Password\"\n\t\t\t\tsecureTextEntry\n\t\t\t\tonChangeText={(text) => setPassword(text)}\n\t\t\t\tvalue={password}\n\t\t\t/>\n\n\t\t\t<TextInput\n\t\t\t\tstyle={styles.inputSpace}\n\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\tsecureTextEntry\n\t\t\t\tonChangeText={(text) => setConfirmPassword(text)}\n\t\t\t\tvalue={confirmPassword}\n\t\t\t/>\n\n\t\t\t<Button\n\t\t\t\ttitle=\"Signup\"\n\t\t\t\tonPress={() => {\n\t\t\t\t\tsignUP();\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Text>\n\t\t\t\tHave an account?\n\t\t\t\t<Text onPress={handleLogin}>Log in</Text>\n\t\t\t</Text>\n\t\t</KeyboardAvoidingView>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}