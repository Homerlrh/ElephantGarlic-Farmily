{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/createPost/ImageInput.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nexport default function ImageInput(_ref) {\n  var imageUri = _ref.imageUri,\n      onChangeImage = _ref.onChangeImage;\n\n  var handleUploadPhoto = function handleUploadPhoto() {\n    var result;\n    return _regeneratorRuntime.async(function handleUploadPhoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 0.5\n            }));\n\n          case 3:\n            result = _context.sent;\n            if (!result.cancelled) onChangeImage(result.uri);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var handlePress = function handlePress() {\n    if (!imageUri) handleUploadPhoto();else Alert.alert(\"Delete\", \"Are you sure you want to delete this image?\", [{\n      text: \"Yes\",\n      onPress: function onPress() {\n        return onChangeImage(null);\n      }\n    }, {\n      text: \"No\"\n    }]);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, !imageUri && React.createElement(MaterialCommunityIcons, {\n    name: \"camera\",\n    size: 50,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }), imageUri && React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    borderRadius: 15,\n    height: 125,\n    width: 125,\n    justifyContent: \"center\"\n  },\n  image: {\n    borderRadius: 15,\n    width: 125,\n    height: 125\n  }\n});","map":{"version":3,"sources":["/Users/homerli/Desktop/ElephantGarlic-Farmily/Component/createPost/ImageInput.js"],"names":["React","MaterialCommunityIcons","ImagePicker","ImageInput","imageUri","onChangeImage","handleUploadPhoto","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","quality","result","cancelled","uri","Alert","alert","message","handlePress","text","onPress","styles","container","image","StyleSheet","create","alignItems","backgroundColor","borderRadius","height","width","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,eAAe,SAASC,UAAT,OAAiD;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;;AAC/D,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEHJ,WAAW,CAACK,uBAAZ,CAAoC;AACxDC,cAAAA,UAAU,EAAEN,WAAW,CAACO,gBAAZ,CAA6BC,MADe;AAExDC,cAAAA,OAAO,EAAE;AAF+C,aAApC,CAFG;;AAAA;AAElBC,YAAAA,MAFkB;AAMxB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuBR,aAAa,CAACO,MAAM,CAACE,GAAR,CAAb;AANC;AAAA;;AAAA;AAAA;AAAA;AAQxBC,YAAAA,KAAK,CAACC,KAAN,CAAY,YAAIC,OAAhB;;AARwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAWA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzB,QAAI,CAACd,QAAL,EAAeE,iBAAiB,GAAhC,KAECS,KAAK,CAACC,KAAN,CAAY,QAAZ,EAAsB,6CAAtB,EAAqE,CACpE;AAAEG,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAA,eAAMf,aAAa,CAAC,IAAD,CAAnB;AAAA;AAAxB,KADoE,EAEpE;AAAEc,MAAAA,IAAI,EAAE;AAAR,KAFoE,CAArE;AAID,GAPD;;AASA,SACC,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAED,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAClB,QAAD,IACA,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,IAAI,EAAE,EAA5C;AAAgD,IAAA,KAAK,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIEA,QAAQ,IAAI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEU,MAAAA,GAAG,EAAEV;AAAP,KAAf;AAAkC,IAAA,KAAK,EAAEiB,MAAM,CAACE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJd,CADD,CADD;AAUA;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAChCH,EAAAA,SAAS,EAAE;AACVI,IAAAA,UAAU,EAAE,QADF;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,YAAY,EAAE,EAHJ;AAIVC,IAAAA,MAAM,EAAE,GAJE;AAKVC,IAAAA,KAAK,EAAE,GALG;AAMVC,IAAAA,cAAc,EAAE;AANN,GADqB;AAShCR,EAAAA,KAAK,EAAE;AACNK,IAAAA,YAAY,EAAE,EADR;AAENE,IAAAA,KAAK,EAAE,GAFD;AAGND,IAAAA,MAAM,EAAE;AAHF;AATyB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport {\n\tView,\n\tStyleSheet,\n\tImage,\n\tTouchableWithoutFeedback,\n\tAlert,\n} from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nexport default function ImageInput({ imageUri, onChangeImage }) {\n\tconst handleUploadPhoto = async () => {\n\t\ttry {\n\t\t\tconst result = await ImagePicker.launchImageLibraryAsync({\n\t\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\t\tquality: 0.5,\n\t\t\t});\n\t\t\tif (!result.cancelled) onChangeImage(result.uri);\n\t\t} catch (err) {\n\t\t\tAlert.alert(err.message);\n\t\t}\n\t};\n\tconst handlePress = () => {\n\t\tif (!imageUri) handleUploadPhoto();\n\t\telse\n\t\t\tAlert.alert(\"Delete\", \"Are you sure you want to delete this image?\", [\n\t\t\t\t{ text: \"Yes\", onPress: () => onChangeImage(null) },\n\t\t\t\t{ text: \"No\" },\n\t\t\t]);\n\t};\n\n\treturn (\n\t\t<TouchableWithoutFeedback onPress={handlePress}>\n\t\t\t<View style={styles.container}>\n\t\t\t\t{!imageUri && (\n\t\t\t\t\t<MaterialCommunityIcons name=\"camera\" size={50} color=\"black\" />\n\t\t\t\t)}\n\t\t\t\t{imageUri && <Image source={{ uri: imageUri }} style={styles.image} />}\n\t\t\t</View>\n\t\t</TouchableWithoutFeedback>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\talignItems: \"center\",\n\t\tbackgroundColor: \"#fff\",\n\t\tborderRadius: 15,\n\t\theight: 125,\n\t\twidth: 125,\n\t\tjustifyContent: \"center\",\n\t},\n\timage: {\n\t\tborderRadius: 15,\n\t\twidth: 125,\n\t\theight: 125,\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}